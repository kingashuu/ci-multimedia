<?php
/*
   Generated by Manuigniter v2.0 
   www.manuigniter.com
*/
class Multimedia_model extends CI_Model
{
  function __construct()
  {
    parent::__construct();
  }
  /*
        * Get multimedia by M_ID 
      */


  function get_table()
  {
    $table = "multimedia";
    return $table;
  }


  function get_max()
  {
    $table = $this->get_table();
    $this->db->select_max('M_ID');
    $query = $this->db->get($table);
    $row = $query->row();
    $id = $row->M_ID;
    return $id;
  }
  function get_where_custom($col, $value)
  {
    $table = $this->get_table();
    $this->db->where($col, $value);
    $query = $this->db->get($table);
    return $query;
  }
  function get_where($id)
  {
    $table = $this->get_table();
    $this->db->where('id', $id);
    $query = $this->db->get($table);
    return $query;
  }
  function get_multimedia($M_ID)
  {
    try {
      return $this->db->get_where('multimedia', array('M_ID' => $M_ID))->row_array();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model Model : Error in get_multimedia function - ' . $ex);
    }
  }
  /*
        * Get multimedia by  column name
      */
  function get_multimediabyclm_name($clm_name, $clm_value)
  {
    try {
      return $this->db->get_where('multimedia', array($clm_name => $clm_value))->row_array();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model Madel : Error in get_multimediabyclm_name function - ' . $ex);
    }
  }
  /*
        * Get All multimedia count 
      */
  function get_all_multimedia_count()
  {
    try {
      $this->db->from('multimedia');
      return $this->db->count_all_results();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_all_multimedia_count function - ' . $ex);
    }
  }
  /*
        * Get All with associated tables join multimediacount 
      */
  function get_all_with_asso_multimedia()
  {
    try {
      $this->db->select('*');
      $this->db->from('multimedia a  ');
      $this->db->join('classification b', 'b.Classification_Name=a. Classification', 'left');
      $this->db->join('sub_classification c', 'c.Sub_Classification_Name=a. Sub_Classification', 'left');
      $query = $this->db->get();
      if ($query->num_rows() != 0) {
        return $query->result_array();
      } else {
        return false;
      }
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_all_with_asso_multimedia function - ' . $ex);
    }
  }
  /*
          * Get all multimedia 
      */
  function get_all_multimedia($params = array())
  {
    try {
      $this->db->order_by('M_ID', 'desc');
      if (isset($params) && !empty($params)) {
        $this->db->limit($params['limit'], $params['offset']);
      }
      return $this->db->get('multimedia')->result_array();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_all_multimedia function - ' . $ex);
    }
  }
  /*
         * function to add new multimedia 
      */
  function add_multimedia($params)
  {
    try {
      $this->db->insert('multimedia', $params);
      return $this->db->insert_id();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in add_multimedia function - ' . $ex);
    }
  }
  /* 
          * function to update multimedia 
      */
  function update_multimedia($M_ID, $params)
  {
    try {
      $this->db->where('M_ID', $M_ID);
      return $this->db->update('multimedia', $params);
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in update_multimedia function - ' . $ex);
    }
  }
  /* 
          * function to delete multimedia 
      */
  function delete_multimedia($M_ID)
  {
    try {
      return $this->db->delete('multimedia', array('M_ID' => $M_ID));
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in delete_multimedia function - ' . $ex);
    }
  }
  /*
        * Get multimedia by  column name where not in particular id
      */
  function get_multimediabyclm_name_not_id($clm_name, $clm_value, $where_cond)
  {
    try {
      $this->db->where('M_ID!=', $where_cond);
      return $this->db->get_where('multimedia', array($clm_name => $clm_value))->row_array();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_multimediabyclm_name_not_id function - ' . $ex);
    }
  }
  /*
        * Get All with associated tables join multimediacount 
      */
  function get_all_with_asso_multimedia_by_cat($column_name = null, $value_id = null, $params = null)
  {
    try {
      $this->db->select('*');
      $this->db->from('multimedia a  ');
      //$this->db->where($column_name, $value_id);
      if ($params != null) {
        $this->db->like('Code', $params);
        $this->db->or_like('Name', $params);
        $this->db->or_like('Sub_Classification', $params);
      } else {
        $this->db->join('classification b', 'b.Classification_Name=a. Classification', 'left');
        $this->db->where('a.' . $column_name, $value_id);
        $this->db->join('sub_classification c', 'c.Sub_Classification_Name=a. Sub_Classification', 'left');
        $this->db->where('a.' . $column_name, $value_id);
      }


      $query = $this->db->get();

      if ($query->num_rows() != 0) {
        return $query->result_array();
      } else {
        return false;
      }
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_all_with_asso_multimedia_by_cat function - ' . $ex);
    }
  }
  /*
          * Get all multimedia_by_cat 
      */
  function get_all_multimedia_by_cat($column_name = null, $value_id = null, $params = array())
  {
    try {
      $this->db->order_by('M_ID', 'desc');
      $this->db->where($column_name, $value_id);
      if (isset($params) && !empty($params)) {
        $this->db->limit($params['limit'], $params['offset']);
      }
      return $this->db->get('multimedia')->result_array();
    } catch (Exception $ex) {
      throw new Exception('Multimedia_model model : Error in get_all_multimedia_by_cat function - ' . $ex);
    }
  }
}
