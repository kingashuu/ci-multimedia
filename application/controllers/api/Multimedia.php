<?php 
/*
    Generated by Manuigniter v2.0 
    www.manuigniter.com
*/
use Restserver\Libraries\REST_Controller;
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Multimedia extends REST_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Multimedia_model');
 } 
 /*
* Listing of multimedia
 */
public function get_all_post()
{
  try{
  $data['multimedia'] = $this->Multimedia_model->get_all_multimedia();
     if($data['multimedia'] && $data['multimedia']!=null){
       $multimedia_ar = array();
       foreach($data['multimedia'] as $m)
       {
       $m_ar = array();
       $m_ar['M_ID'] = $m['M_ID'];
       $m_ar['Code'] = $m['Code'];
       $m_ar['Name'] = $m['Name'];
       $m_ar['Description'] = $m['Description'];
       $m_ar['Attachment'] = $m['Attachment'];
       $m_ar['Recorde_Date'] = $m['Recorde_Date'];
       $m_ar['Size'] = $m['Size'];
       $m_ar['Classification'] = $m['Classification'];
       $m_ar['Sub_Classification'] = $m['Sub_Classification'];
       $m_ar['Type'] = $m['Type'];
       $m_ar['Recorde_By'] = $m['Recorde_By'];
       $multimedia_ar[] = $m_ar;
       }
       $response = array(
       'status' => 200,
       'message' => 'get all data Succesfully',
       'data' => $multimedia_ar,
       );
       $this->response($response, REST_Controller::HTTP_OK);
     }
     else{
       $response = array(
      'status' => 400,
      'message' => 'Detail is not found'
        );
       $this->response($response, REST_Controller::HTTP_OK); 
        }
       } catch (Exception $ex) {
             throw new Exception('Multimedia controller_name : Error in get_all_post function - ' . $ex);
        }  
}
 /*
  * Adding a new multimedia
  */
 function addnew_post()
 {  
  try{
      $params = array(
       'Code'=> $this->input->post('Code'),
       'Name'=> $this->input->post('Name'),
       'Description'=> $this->input->post('Description'),
       'Recorde_Date'=> $this->input->post('Recorde_Date'),
       'Size'=> $this->input->post('Size'),
       'Classification'=> $this->input->post('Classification'),
       'Sub_Classification'=> $this->input->post('Sub_Classification'),
       'Type'=> $this->input->post('Type'),
       'Recorde_By'=> $this->input->post('Recorde_By'),
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
        $foldername='Attachment';
        $fileuploaddire='./resource/'.$foldername;
        $directory=base_url('resource/').$foldername;
        if (!is_dir($fileuploaddire)) {
         mkdir($fileuploaddire, 0777, true);
        }
        $Attachment="";
        if (!empty($_FILES['Attachment']['name']))
        { 
            $filename =time().$_FILES['Attachment']['name'];
            $Attachment = str_replace(' ','_',$filename);
            $config['file_name'] = $Attachment; 
            $config['upload_path']=$fileuploaddire;
            $config['allowed_types']='pdf|doc|docx|docs|jpg|jpeg|png ';
             $config['max_length']='100000';
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('Attachment'))
            {
                $error =$this->upload->display_errors();
                                                    // print_r($error);
                $msg='File Can not Upload ..Please upload pdf |doc |docs|jpg|jpeg|png  type only and Maximum file size 25MB '.$error;
                $this->response(array('status' => 400, 'message' => 'somthing went wrong','image' => $error), REST_Controller::HTTP_OK);
            }
            else 
            {
            }
        }
        $params['Attachment'] =$Attachment;
       if(isset($_POST) && count($_POST) > 0)     
        {  
            $M_ID= $this->Multimedia_model->add_multimedia($params);
   $data['multimedia'] = $this->Multimedia_model->get_multimedia($M_ID);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Added',
            'data' => $data
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
        else
        { 
           $response = array(
            'status' => 400,
            'message' => 'Not Added try again',
            'data' => ''
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
       } catch (Exception $ex) {
             throw new Exception('Multimedia controller_name : Error in new multimedia function - ' . $ex);
       }  
 }  
  /*
  * Editing a multimedia
 */
  function edit_post($M_ID)
 {   
  try{
   $data['multimedia'] = $this->Multimedia_model->get_multimedia($M_ID);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['multimedia']['M_ID']))
      {
        $params = array(
           'Code'=> $this->input->post('Code'),
           'Name'=> $this->input->post('Name'),
           'Description'=> $this->input->post('Description'),
           'Recorde_Date'=> $this->input->post('Recorde_Date'),
           'Size'=> $this->input->post('Size'),
           'Classification'=> $this->input->post('Classification'),
           'Sub_Classification'=> $this->input->post('Sub_Classification'),
           'Type'=> $this->input->post('Type'),
           'Recorde_By'=> $this->input->post('Recorde_By'),
        );
      $foldername='Attachment';
      $fileuploaddire='./resource/'.$foldername;
      $directory=base_url('resource/').$foldername;
      if (!is_dir($fileuploaddire)) {
         mkdir($fileuploaddire, 0777, true);
      }
      $Attachment="";
      if (!empty($_FILES['Attachment']['name']))
      { 
          $filename =time().$_FILES['Attachment']['name'];
          $Attachment = str_replace(' ','_',$filename);
          $config['file_name'] = $Attachment; 
          $config['upload_path']=$fileuploaddire;
          $config['allowed_types']='pdf|doc|docx|docs|jpg|jpeg|png ';
          $config['max_length']='100000';
          $this->upload->initialize($config);
          if(!$this->upload->do_upload('Attachment'))
          {
              $error =$this->upload->display_errors();
                                                    // print_r($error);
              $msg='File Can not Upload ..Please upload pdf |doc |docs|jpg|jpeg|png  type only and Maximum file size 25MB '.$error;
           $this->response(array('status' => 400,'message' => 'file required'), REST_Controller::HTTP_OK);
              }
              else 
              {
          $pathn=FCPATH.'resource/Attachment/'.$data['multimedia']['Attachment'];
         if(is_file($pathn))
           unlink($pathn);   
                $params['Attachment'] =$Attachment;
              }
       }
       else
       {
        }
          if(isset($_POST) && count($_POST) > 0)     
           {  
           $this->Multimedia_model->update_multimedia($M_ID,$params);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Updated',
            'data' => $M_ID
             );
           $this->response($response, REST_Controller::HTTP_OK);
           }
           else
          {
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $M_ID
             );
           $this->response($response, REST_Controller::HTTP_OK);
          }
  }
       } catch (Exception $ex) {
             throw new Exception('Multimedia controller_name : Error in edit_post function - ' . $ex);
        }  
} 
/*
  * Deleting multimedia
  */
  function remove_post($M_ID)
   {
  try{
      $multimedia = $this->Multimedia_model->get_multimedia($M_ID);
  // check if the multimedia exists before trying to delete it
       if(isset($multimedia['M_ID']))
       {
         $this->Multimedia_model->delete_multimedia($M_ID);
          $pathn=FCPATH.'resource/Attachment/'.$multimedia['Attachment'];
         if(is_file($pathn))
           unlink($pathn);   
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Removed',
            'data' => $M_ID
             );
           $this->response($response, REST_Controller::HTTP_OK);
       }
       else
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $M_ID
             );
           $this->response($response, REST_Controller::HTTP_OK);
       } catch (Exception $ex) {
             throw new Exception('Multimedia controller_name : Error in remove_post function - ' . $ex);
        }  
  }
 }
